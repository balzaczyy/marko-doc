$ function isValidHexValue (hexValue) {
  return /^#[0-9A-F]{6}$/i.test(hexValue);
}

class {
  onColorSelected (color) {
    this.emit('colorSelected', color);
  }
  onHexInput () {
    let hexInput = this.getEl('hexInput').value;

    if (!hexInput.startsWith('#')) {
      hexInput = '#' + hexInput;
    }

    if (!isValidHexValue(hexInput)) {
      hexInput = this.input.colors[0];
    }

    this.emit('colorSelected', hexInput);
  }
}

style {
  .color-picker-footer {
    width: 200px;
    height: 100px;
    border-radius: 0px 0px 20px 20px;
    font: 30px Arial;
    display: flex;
    flex-direction: column;
    text-align: center;
    color: white;
    box-shadow: 0px 3px 5px #888888;
  }
  .color-picker-selection-container {
    width: 75%;
    margin: 5px 0px 0px 20px;
  }
  .color-picker-selection-container input {
    margin-top: 8px;
    border-radius: 0px 0px 0px 0px;
    border-width: 0px 0px 1px 0px;
    outline: none;
    color: #A9A9A9;
  }
}

$ var colors = input.colors;
div.color-picker-footer
    div.color-picker-selection-container
        div for(color in colors)
            <!--
            Listen for the `colorSelected` event emitted from the
            <color-picker-selection> component and handle it in this
            component's `onColorSelected` method.
            NOTE: We pass along the `color` to the event handler method
            -->
            selection color=color on-colorSelected('onColorSelected', color)
        input key="hexInput" placeholder="Hex value" on-input('onHexInput')
